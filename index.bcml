<!DOCTYPE html>
<html>
<head>
 <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <meta name="HandheldFriendly" content="true">
  <title>My BizApp</title>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script src="https://cdn.bizstore.io/bizapp-0.0.2.min.js"></script>
  <style>
    button { width: 100%; margin: 0.3rem 0; border: 0; background-color: #42A5F5; color: white; font-size: 1rem; padding: 0.6rem 1.3rem; border-radius: 8px; transition: all 0.2s; cursor: pointer; outline: 0; }
    button:hover { background-color: #1565C0; }
  </style>
  
<style>
body {
    background-color: black;
    text-align: center;
    color: white;
    font-family: Arial, Helvetica, sans-serif;
  overscroll-behavior-y: contain;
}
</style>
</head>
<body>
    <bizapp-root>
    <h3>90's Snake Game</h3>
<p>Slide up, down, left, and right to move</p>

<style>

canvas {
    border: 1px solid white;
  }

html, body {
    height: 100%;
    margin: 0;
  }
  .button {
    display: block;
    background:yellow;
    text-align: center;
    height:15px;
   // width:9px;
    padding: 10px;
   // margin-left:80px;
    border-radius: 5px;
    color: white;
    font-weight: bold;
    text-decoration: none;
    color:black
}
.responsive {
    max-width: 100%;
    //height: auto;
}
</style>

<canvas width="400" height="400" id="game"></canvas>
<br>

<span id="result"> </span>
<a href="donate.bcml" class="button"> Donate </a>
<a href="http://bloconomic.com/" ><img src="a.jpg" height="120px" class="responsive"></a>

<script>
var canvas = document.getElementById('game');
var context = canvas.getContext('2d');

var grid = 16;
var snake = {
  x: 160,
  y: 160,
  dx: grid,
  dy: 0,
  cells: [],
  maxCells: 4
};
var count = 0;
var apple = {
  x: 320,
  y: 320
};

function getRandomInt(min, max) {
  
  return Math.floor(Math.random() * (max - min)) + min;
}

// game loop
function loop() {
  requestAnimationFrame(loop);

  // slow game loop to 15 fps instead of 60 - 60/15 = 4
  if (++count < 4) {
    return;
  }

  count = 0;
  context.clearRect(0,0,canvas.width,canvas.height);

  snake.x += snake.dx;
  snake.y += snake.dy;

  // wrap snake position on edge of screen
  if (snake.x < 0) {
    snake.x = canvas.width - grid;
   // alert("1");
   snake.x = 160;
        snake.y = 160;
        snake.cells = [];
        snake.maxCells = 4;
        snake.dx = grid;
        snake.dy = 0;

        apple.x = getRandomInt(0, 25) * grid;
        apple.y = getRandomInt(0, 25) * grid;
  }
  else if (snake.x >= canvas.width) {
        snake.x = 0;
   // alert("2");
        snake.x = 160;
        snake.y = 160;
        snake.cells = [];
        snake.maxCells = 4;
        snake.dx = grid;
        snake.dy = 0;

        apple.x = getRandomInt(0, 25) * grid;
        apple.y = getRandomInt(0, 25) * grid;
  }

  if (snake.y < 0) {
       
        snake.y = canvas.height - grid;
        snake.x = 160;
        snake.y = 160;
        snake.cells = [];
        snake.maxCells = 4;
        snake.dx = grid;
        snake.dy = 0;
        apple.x = getRandomInt(0, 25) * grid;
        apple.y = getRandomInt(0, 25) * grid;
  //  alert("3");
  }
  else if (snake.y >= canvas.height) {
    snake.y = 0;
    snake.x = 160;
        snake.y = 160;
        snake.cells = [];
        snake.maxCells = 4;
        snake.dx = grid;
        snake.dy = 0;

        apple.x = getRandomInt(0, 25) * grid;
        apple.y = getRandomInt(0, 25) * grid;
    //alert("4");
  }

  // keep track of where snake has been. front of the array is always the head
  snake.cells.unshift({x: snake.x, y: snake.y});

  // remove cells as we move away from them
  if (snake.cells.length > snake.maxCells) {
    snake.cells.pop();
  }

  // draw apple
  context.fillStyle = 'red';
  context.fillRect(apple.x, apple.y, grid-1, grid-1);

  // draw snake
  context.fillStyle = 'green';
  snake.cells.forEach(function(cell, index) {
    context.fillRect(cell.x, cell.y, grid-1, grid-1);

    // snake ate apple
    if (cell.x === apple.x && cell.y === apple.y) {
      snake.maxCells++;

      apple.x = getRandomInt(0, 25) * grid;
      apple.y = getRandomInt(0, 25) * grid;
    }

    // check collision with all cells after this one (modified bubble sort)
    for (var i = index + 1; i < snake.cells.length; i++) {
      
      // collision. reset game
      if (cell.x === snake.cells[i].x && cell.y === snake.cells[i].y) {
        snake.x = 160;
        snake.y = 160;
        snake.cells = [];
        snake.maxCells = 4;
        snake.dx = grid;
        snake.dy = 0;

        apple.x = getRandomInt(0, 25) * grid;
        apple.y = getRandomInt(0, 25) * grid;
      }
    }
  });
}

var allowedTime = 200;
var startX = 0;
var startY = 0;

canvas.addEventListener('touchstart', function(e){
    var touch = e.changedTouches[0]
    startX = touch.pageX
    startY = touch.pageY
    startTime = new Date().getTime()
    e.preventDefault()
}, false)

canvas.addEventListener('touchmove', function(e){
    e.preventDefault()
}, false)

canvas.addEventListener('touchend', function(e){

    var touch = e.changedTouches[0]
    distX = touch.pageX - startX
    distY = touch.pageY - startY

    if (Math.abs(distX) > Math.abs(distY)) {
      if (distX > 0 && snake.dx === 0) {
        snake.dx = grid;
        snake.dy = 0;
      }
      else if (distX < 0 && snake.dx === 0) {
        snake.dx = -grid;
        snake.dy = 0;
      }
    } else {
      if (distY > 0 && snake.dy === 0) {
        snake.dy = grid;
        snake.dx = 0;
      }
      else if (distY < 0 && snake.dy === 0) {
        snake.dy = -grid;
        snake.dx = 0;
      }
    }
    e.preventDefault();

}, false)

document.addEventListener('click keydown', function(e) {
  // prevent snake from backtracking on itself
  if (e.which === 37 && snake.dx === 0) {
    snake.dx = -grid;
    snake.dy = 0;
  }
  else if (e.which === 38 && snake.dy === 0) {
    snake.dy = -grid;
    snake.dx = 0;
  }
  else if (e.which === 39 && snake.dx === 0) {
    snake.dx = grid;
    snake.dy = 0;
  }
  else if (e.which === 40 && snake.dy === 0) {
    snake.dy = grid;
    snake.dx = 0;
  }
});

requestAnimationFrame(loop);
</script>


</bizapp-root>

<script>

function donate(){

      var amount = $("#amount").val();
      if(amount!=""){

       var options = {
          address: "yMzUo7mZQ8ZHAUhtoNQHZMJe8rTJZ3x1JR",
          //address: "TPLXtp614r9Df8hdj34aaGGor4ef1che11",
          amount: amount * 100000000,  // 1 TRVC = 100,000,000
          message: 'Snake-Game',
          identifier: "446f7261"
        };

        BizApp.payToWallet(options, function(error, result) {

          if (error) {

            $("#result").text("Payment failed: " + error);
            return false;

          }else{
            $("#result").text("Payment Done");
          }
        });  

      }else{

        $("result").text("Please Enter Amount");
      }
     

  }

</script>

</body>
</html>

